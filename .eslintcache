[{"C:\\Coding\\workspace\\reactmemegenerator\\src\\reportWebVitals.js":"1","C:\\Coding\\workspace\\reactmemegenerator\\src\\Scraper.js":"2","C:\\Coding\\workspace\\reactmemegenerator\\src\\Templates.js":"3","C:\\Coding\\workspace\\reactmemegenerator\\src\\index.js":"4","C:\\Coding\\workspace\\reactmemegenerator\\src\\Cache.js":"5","C:\\Coding\\workspace\\reactmemegenerator\\src\\Download.js":"6"},{"size":362,"mtime":1611583088448,"results":"7","hashOfConfig":"8"},{"size":2728,"mtime":1611946540393,"results":"9","hashOfConfig":"8"},{"size":1618,"mtime":1611852252647,"results":"10","hashOfConfig":"8"},{"size":525,"mtime":1611946516630,"results":"11","hashOfConfig":"8"},{"size":401,"mtime":1611932600926,"results":"12","hashOfConfig":"8"},{"size":779,"mtime":1611946404479,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16oo1ov",{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Coding\\workspace\\reactmemegenerator\\src\\reportWebVitals.js",[],"C:\\Coding\\workspace\\reactmemegenerator\\src\\Scraper.js",["27","28","29","30","31"],"C:\\Coding\\workspace\\reactmemegenerator\\src\\Templates.js",["32","33","34"],"import styled from '@emotion/styled';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst templateURLsExt = [];\r\n\r\nconst TemplateImage = styled.img`\r\n  height: 100px;\r\n  width: 130px;\r\n`;\r\n\r\nconst TemplateImageButton = styled.button`\r\n  padding: 5px;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n  :hover {\r\n    background-color: grey;\r\n  }\r\n`;\r\n\r\nexport function Templates(props) {\r\n  const [currentTempalteURL, setCurrentTemplateURL] = useState('');\r\n  const [templateURLs, setTemplateURLs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://api.memegen.link/templates')\r\n      .then(function (response) {\r\n        setTemplateURLs(\r\n          response.data.map((element) => {\r\n            return element.blank;\r\n          }),\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error: ', error);\r\n      });\r\n  }, [templateURLs]);\r\n\r\n  return (\r\n    <div>\r\n      {templateURLs.map((element, index) => {\r\n        return (\r\n          <TemplateImageButton\r\n            id=\"templateImage\"\r\n            key={'btn' + index}\r\n            onClick={(e) => {\r\n              setCurrentTemplateURL(e.target.src);\r\n              props.scrollTo('preview');\r\n              props.setBaseURL(e.target.src);\r\n            }}\r\n          >\r\n            <TemplateImage\r\n              key={element}\r\n              src={element}\r\n              alt=\"this is the alt text\"\r\n            />\r\n          </TemplateImageButton>\r\n        );\r\n      })}\r\n      <p>\r\n        <img id=\"templateImage\" alt=\"alt text juhu\" src={currentTempalteURL} />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Coding\\workspace\\reactmemegenerator\\src\\index.js",[],"C:\\Coding\\workspace\\reactmemegenerator\\src\\Cache.js",[],"C:\\Coding\\workspace\\reactmemegenerator\\src\\Download.js",[],{"ruleId":"35","severity":1,"message":"36","line":10,"column":22,"nodeType":"37","messageId":"38","endLine":10,"endColumn":37},{"ruleId":"35","severity":1,"message":"39","line":11,"column":25,"nodeType":"37","messageId":"38","endLine":11,"endColumn":43},{"ruleId":"40","severity":1,"message":"41","line":12,"column":10,"nodeType":"37","messageId":"42","endLine":12,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":26,"column":7,"nodeType":"45","messageId":"46","endLine":26,"endColumn":47,"fix":"47"},{"ruleId":"35","severity":1,"message":"48","line":34,"column":9,"nodeType":"37","messageId":"38","endLine":34,"endColumn":18,"fix":"49"},{"ruleId":"40","severity":1,"message":"50","line":5,"column":7,"nodeType":"37","messageId":"42","endLine":5,"endColumn":22},{"ruleId":"51","severity":1,"message":"52","line":7,"column":7,"nodeType":"37","messageId":"53","endLine":7,"endColumn":20},{"ruleId":"51","severity":1,"message":"54","line":12,"column":7,"nodeType":"37","messageId":"53","endLine":12,"endColumn":26},"prefer-const","'setDraftTopText' is never reassigned. Use 'const' instead.","Identifier","useConst","'setDraftBottomText' is never reassigned. Use 'const' instead.","@typescript-eslint/no-unused-vars","'generatedMemes' is assigned a value but never used.","unusedVar","unicorn/prefer-string-slice","Prefer `String#slice()` over `String#substring()`.","CallExpression","substring",{"range":"55","text":"56"},"'memeArray' is never reassigned. Use 'const' instead.",{"range":"57","text":"58"},"'templateURLsExt' is assigned a value but never used.","@typescript-eslint/naming-convention","Variable name `TemplateImage` must match one of the following formats: camelCase","doesNotMatchFormat","Variable name `TemplateImageButton` must match one of the following formats: camelCase",[808,848],"baseUrl.slice(0, Math.max(0, baseUrl.length - 4))",[968,971],"const"]